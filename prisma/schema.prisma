generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model smashmateCurrentRatePage {
  id               BigInt   @id
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  currentMaxRoomId Int
  prevMaxRoomId    Int
  nextFetchPage    Int
}

model smashmateCurrentSeason {
  id         BigInt   @id
  created_at DateTime @default(now()) @db.Timestamptz(6)
  season     String   @db.VarChar
}

model smashmateCurrentUserPage {
  id         BigInt   @id
  created_at DateTime @default(now()) @db.Timestamptz(6)
  nextUserId Int?
}

model smashmateDeletedPlayers {
  id         BigInt   @id
  created_at DateTime @default(now()) @db.Timestamptz(6)
  playerId   Int
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model smashmateMatchRoomResults {
  id          BigInt   @id
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  season      String   @db.VarChar
  matchRoomId Int
  player1Id   Int
  player2Id   Int
  winnerId    Int?
  loserId     Int?
  rateChange  Int      @default(0) @db.SmallInt
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model smashmateMatchRoomsOnlyPlayerIds {
  id          BigInt   @id
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  season      String   @db.VarChar
  matchRoomId Int
  player1Id   Int
  player2Id   Int
  timeText    String?
}

model smashmatePlayerDataBySeason {
  id                   BigInt   @id
  created_at           DateTime @default(now()) @db.Timestamptz(6)
  season               String
  playerId             Int
  playerName           String
  twitterScreenName    String
  isSubAccount         Boolean
  currentRate          Int?
  maxRate              Int?
  win                  Int?
  loss                 Int?
  currentCharactersCsv String?
  mainAccountId        Int?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model smashmatePlayerPageFetchState {
  id               BigInt   @id
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  season           String   @db.VarChar
  playerId         Int
  nextFetchPage    Int      @default(1) @db.SmallInt
  isCompleted      Boolean  @default(false)
  currentMaxRoomId Int      @default(-1)
  prevMaxRoomId    Int      @default(-1)
}

model smashmateRealtimeUserCount {
  id         BigInt   @id
  created_at DateTime @default(now()) @db.Timestamptz(6)
  userCount  BigInt
}

model smashmateAccountInfo {
  id                BigInt   @id
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  playerId          Int
  playerName        String
  twitterScreenName String
  mainAccountId     Int?
  isDeleted         Boolean  @default(false)
}

model smashmateCharacters {
  id               Int      @id @db.SmallInt
  created_at       DateTime @default(now()) @db.Timestamptz(6)
  characterId      String
  characterNameJpn String
}

model smashmateCurrentPlayerRates {
  id          BigInt   @id
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  playerId    Int
  currentRate Int      @db.SmallInt
  season      String
}

model smashmateCurrentTop200 {
  id                   BigInt   @id
  created_at           DateTime @default(now()) @db.Timestamptz(6)
  rank                 Int      @db.SmallInt
  playerId             Int
  currentCharactersCsv String?
  rate                 Int      @db.SmallInt
}

model smashmatePlayerNames {
  id         BigInt   @id
  created_at DateTime @default(now()) @db.Timestamptz(6)
  playerName String
  playerId   Int
}

model smashmateRateCumulativeCounts {
  id              BigInt   @id
  created_at      DateTime @default(now()) @db.Timestamptz(6)
  season          String
  rate            Int      @db.SmallInt
  cumulativeCount Int      @db.SmallInt
}

model smashmateSeasons {
  season     String    @id
  started_at DateTime  @db.Timestamptz(6)
  ended_at   DateTime? @db.Timestamptz(6)
}
